Username : ProfHezzy
Pass : profhezzy@123

from django.utils import timezone
from core.models import User, Profile  # assuming your app is 'accounts'
from core.models import Subject

# First, create some Subjects for linking
subject_python = Subject.objects.create(name='Python')
subject_datasci = Subject.objects.create(name='Data Science')

# Create Users
user1 = User.objects.create_user(username='hezzy', email='hezzy@example.com', password='testpass123', role='student', is_verified=True)
user2 = User.objects.create_user(username='david', email='david@example.com', password='testpass123', role='mentor', is_verified=True)
user3 = User.objects.create_user(username='jane', email='jane@example.com', password='testpass123', role='recruiter')
user4 = User.objects.create_user(username='amaka', email='amaka@example.com', password='testpass123', role='sponsor')

# Create Profiles
Profile.objects.create(user=user1, bio="Aspiring Data Scientist passionate about AI.", education_level='undergrad', institution='UNILAG', graduation_year=2025, location='Lagos', website='https://hezzy.dev', linkedin='https://linkedin.com/in/hezzy', github='https://github.com/hezzy', points=120, skills='Python, Data Analysis, Machine Learning')
Profile.objects.create(user=user2, bio="Experienced mentor in software engineering.", education_level='professional', institution='Microsoft Certified', graduation_year=2019, location='Abuja', points=320, skills='Python, Django, DevOps')
Profile.objects.create(user=user3, bio="Tech Recruiter connecting top talents.", education_level='masters', institution='Harvard', graduation_year=2020, location='London', points=250)
Profile.objects.create(user=user4, bio="Investor and tech sponsor", education_level='phd', institution='Oxford', graduation_year=2015, location='New York', points=500)

# Assign Subjects to Profiles
profile1 = Profile.objects.get(user=user1)
profile1.subjects.add(subject_python, subject_datasci)
profile1.save()

profile2 = Profile.objects.get(user=user2)
profile2.subjects.add(subject_python)
profile2.save()



    # Challenges/Competitions URLs
    path('challenges/', views.challenge_list, name='challenge_list'),
    path('challenges/<int:challenge_id>/', views.challenge_detail, name='challenge_detail'),
    path('challenges/<int:challenge_id>/submit/', login_required(views.submit_challenge), name='submit_challenge'),
    
    # Opportunities URLs
    path('opportunities/', views.opportunity_list, name='opportunity_list'),
    path('opportunities/<int:opp_id>/', views.opportunity_detail, name='opportunity_detail'),
    
    # Badges URLs
    path('badges/', views.badge_list, name='badge_list'),
    path('badges/<int:badge_id>/', views.badge_detail, name='badge_detail'),

path('remove-connection/<str:username>/', 
         login_required(views.remove_connection), name='remove_connection'),
    
    
    
    # Projects URLs
    path('projects/<str:username>/', login_required(views.projects_view), name='projects'),
    path('projects/add/', login_required(views.add_project), name='add_project'),
    path('projects/<int:project_id>/edit/', login_required(views.edit_project), name='edit_project'),
    path('projects/<int:project_id>/delete/', login_required(views.delete_project), name='delete_project'),
    
    # About URLs
    path('about/<str:username>/', views.about_view, name='about'),
    
    # Posts URLs
    path('posts/create/', login_required(views.create_post), name='create_post'),
    path('posts/<int:post_id>/', views.post_detail, name='post_detail'),
    path('posts/<int:post_id>/edit/', login_required(edit_post), name='edit_post'),
    path('posts/<int:post_id>/delete/', login_required(delete_post), name='delete_post'),
    path('posts/<int:post_id>/like/', login_required(toggle_like), name='toggle_like'),
    path('posts/<int:post_id>/comment/', login_required(views.add_comment), name='add_comment'),
    
    # Experience URLs
    path('experience/add/', login_required(views.add_experience), name='add_experience'),
    path('experience/<int:exp_id>/edit/', login_required(views.edit_experience), name='edit_experience'),
    path('experience/<int:exp_id>/delete/', login_required(views.delete_experience), name='delete_experience'),
    
    # Education URLs
    path('education/add/', login_required(views.add_education), name='add_education'),
    path('education/<int:edu_id>/edit/', login_required(views.edit_education), name='edit_education'),
    path('education/<int:edu_id>/delete/', login_required(views.delete_education), name='delete_education'),
    
    # Skills URLs
    path('skills/add/', login_required(views.add_skill), name='add_skill'),
    path('skills/<int:skill_id>/delete/', login_required(views.delete_skill), name='delete_skill'),






/* chat.css */

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Base styles for the page and chat container */
body {
    @apply bg-gray-100 font-inter h-screen overflow-hidden;
}

.chat-container {
    @apply flex flex-col h-screen max-w-xl mx-auto bg-white shadow-lg rounded-lg overflow-hidden;
    max-height: 90vh; /* Adjust for desktop spacing */
    margin-top: 2.5vh;
    margin-bottom: 2.5vh;
}

/* Chat Header */
.chat-header {
    @apply flex items-center p-4 bg-blue-600 text-white shadow-md flex-shrink-0;
}

.back-link {
    @apply text-white text-3xl mr-3 hover:text-blue-200 transition duration-200;
}

.user-info {
    @apply flex items-center flex-grow;
}

.user-avatar {
    @apply w-12 h-12 rounded-full object-cover border-2 border-white mr-3;
}

/* Fallback for default profile image if no user.profile.profile_pic */
.user-avatar[src*="default-profile.jpg"] {
    @apply bg-gray-300; /* Example background */
}

.user-name {
    @apply text-xl font-semibold;
}

.status {
    @apply text-xs text-blue-200; /* Example for online status */
}

.chat-actions {
    @apply text-white text-xl space-x-3;
}

.btn-icon {
    @apply bg-transparent border-none text-white p-2 rounded-full hover:bg-blue-700 transition duration-200;
    line-height: 1; /* Adjust for icon vertical alignment */
}
.btn-icon i {
    font-size: 1.25rem; /* Adjust icon size */
}


/* Chat Messages Area */
.chat-messages {
    @apply flex-grow overflow-y-auto p-4 space-y-3 bg-gray-50 flex flex-col-reverse; /* flex-col-reverse for scroll to bottom */
    scroll-behavior: smooth; /* Smooth scrolling for new messages */
}

/* Message Loading Spinner */
.messages-loading {
    @apply text-center text-muted py-4;
}
.spinner-border {
    width: 2rem;
    height: 2rem;
    border-width: 0.25em;
    animation: spinner-border .75s linear infinite;
    display: inline-block;
    vertical-align: -.125em;
    border-radius: 50%;
    color: #0d6efd; /* Bootstrap primary color */
}
@keyframes spinner-border {
  to { transform: rotate(360deg); }
}

/* Individual Message Bubble */
.message-bubble {
    @apply p-3 rounded-lg max-w-[75%];
    box-shadow: 0 1px 2px rgba(0,0,0,0.1);
    word-wrap: break-word; /* Ensure long words wrap */
}

.message-bubble.sent {
    @apply bg-blue-500 text-white self-end rounded-br-none; /* Align to right, adjust corner */
}

.message-bubble.received {
    @apply bg-gray-200 text-gray-800 self-start rounded-bl-none; /* Align to left, adjust corner */
}

.message-timestamp {
    @apply text-xs mt-1;
    color: rgba(255, 255, 255, 0.7); /* Lighter for sent messages */
}

.message-bubble.received .message-timestamp {
    color: rgba(0, 0, 0, 0.4); /* Darker for received messages */
}

/* Message Input Area */
.message-input-area {
    @apply flex items-end p-4 border-t border-gray-200 bg-white flex-shrink-0;
}

.message-textarea {
    @apply flex-grow p-3 border border-gray-300 rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-blue-500 text-base;
    min-height: 44px; /* Minimum height for single line */
    max-height: 120px; /* Max height to prevent excessive expansion */
    overflow-y: auto; /* Enable scrolling when content exceeds max-height */
}

.send-button {
    @apply ml-3 p-3 bg-blue-600 text-white rounded-full w-12 h-12 flex items-center justify-center text-xl hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-200;
    flex-shrink: 0; /* Prevent button from shrinking */
}

/* Responsive adjustments for smaller screens */
@media (max-width: 768px) {
    .chat-container {
        @apply rounded-none shadow-none mt-0 mb-0 h-screen; /* Full screen on mobile */
        max-height: 100vh;
    }
}